stages: [deps, lint, build, deploy]

.js: &js
  image: node:latest
  before_script:
    - cd web
    - npm install
    - npm -v && node -v
  cache: &js_cache
    policy: pull
    key:
      files:
        - web/package-lock.json
    paths:
      - web/node_modules

.crystal: &crystal
  image: "crystallang/crystal:latest"
  cache:
    key:
      files:
        - shard.lock
    paths:
      - lib
  before_script:
    - apt-get update -qq && apt-get install -y -qq libxml2-dev
    - crystal -v
    - shards --version

js npm:
  <<: *js
  stage: deps
  script:
    - echo "Nothing to do."
  needs: []
  cache:
    <<: *js_cache
    policy: pull-push

js eslint:
  <<: *js
  stage: lint
  needs:
    - js npm
  script:
    - 'node_modules/.bin/eslint -v'
    - 'node_modules/.bin/eslint -- src/*.tsx'

js react build:
  <<: *js
  stage: build
  needs:
    - js eslint
  script:
    - npm run-script build
  artifacts:
    paths:
      - public/

crystal build:
  <<: *crystal
  stage: build
  needs: []
  script:
    - shards build --production shatter-wsp
  except:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

crystal build release:
  <<: *crystal
  stage: build
  needs: []
  script:
    - shards build --production shatter-wsp --release
  artifacts:
    paths:
      - bin/shatter-wsp
  only:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy:
  image: ubuntu
  stage: deploy
  only:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - crystal
    - js react build
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - mv bin/shatter-wsp shatter-wsp

    - rsync -r $SSH_FLAGS shatter-wsp public $SSH_USER@$SSH_HOSTNAME
    - ssh $SSH_FLAGS $SSH_USER@$SSH_HOSTNAME "systemctl restart shatter.service"
